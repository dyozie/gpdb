---
title: Configuring User Impersonation and Proxying
---

PXF accesses Hadoop services on behalf of Greenplum Database end users. By default, PXF tries to access data source services (HDFS, Hive, HBase) using the identity of the Greenplum Database user account that logs into Greenplum Database and performs an operation using a PXF connector profile. Keep in mind that PXF uses only the _login_ identity of the user when accessing Hadoop services. For example, if a user logs into Greenplum Database as the user `jane` and then execute `SET ROLE` or `SET SESSION AUTHORIZATION` to assume a different user identity, all PXF requests still use the identity `jane` to access Hadoop services. 

With the default PXF configuration, you must explicitly configure each Hadoop data source (HDFS, Hive, HBase) to allow the PXF process owner (usually `gpadmin`) to act as a proxy for impersonating HDFS users or groups. See [Configuring Hadoop Proxying](#hadoop), [Hive User Impersonation](#hive), and [HBase User Impersonation](#hbase).  

As an alternative, you can disable PXF user impersonation. With user impersonation disabled, PXF executes all Hadoop service requests as the PXF process owner (usually `gpadmin`). This behavior matches earlier releases of PXF, but provides no means to control access to Hadoop services for different Greenplum Database users in Hadoop. See [Configuring PXF User Impersonation](#pxf_cfg_proc) for information about disabling user impersonation.

## <a id="pxf_cfg_proc"></a>Configuring PXF User Impersonation

Perform the following procedure to turn PXF user impersonation on or off in your Greenplum Database cluster. User impersonation is enabled by default.

1. Log in to your Greenplum Database master node as the administrative user and set up the environment:

    ``` shell
    $ ssh gpadmin@<gpmaster>
    gpadmin@gpmaster$ . /usr/local/greenplum-db/greenplum_path.sh
    ```

2. Open the `$GPHOME/pxf/conf/pxf-env.sh` file in a text editor. For example:

    ``` shell
    gpadmin@gpmaster$ vi $GPHOME/pxf/conf/pxf-env.sh
    ```

3. Locate the `PXF_USER_IMPERSONATION` setting in the `pxf-env.sh` file. Set the value to `true` to turn PXF user impersonation on, or `false` to turn it off. For example:

    ``` shell
    PXF_USER_IMPERSONATION="true"
    ```

4. Copy the updated `pxf-env.sh` file to each Greenplum Database segment host. For example, if `seghostfile` contains a list, one-host-per-line, of the segment hosts in your Greenplum Database cluster:

    ``` shell
    gpadmin@gpmaster$ gpscp -v -f seghostfile $GPHOME/pxf/conf/pxf-env.sh =:/usr/local/greenplum-db/pxf/conf/pxf-env.sh
    ```

5. Restart PXF on each Greenplum Database segment host to apply the new setting. For example:

    ``` shell
    $ gpadmin@gpmaster$ gpssh -e -v -f seghostfile "/usr/local/greenplum-db/pxf/bin/pxf restart"
    ```

## <a id="hadoop"></a>Configuring Hadoop Proxying

When PXF user personation is enabled, the Hadoop `core-site.xml` configuration file `hadoop.proxyuser.<name>.hosts` and `hadoop.proxyuser.<name>.groups` property values identify the HDFS hosts and HDFS groups that permit user impersonation for the operating system user `<name>`. 

The following settings permit the `gpadmin` user to impersonate all HDFS groups on all HDFS hosts:

``` xml
<property>
    <name>hadoop.proxyuser.gpadmin.hosts</name>
    <value>*</value>
</property>
<property>
    <name>hadoop.proxyuser.gpadmin.groups</name>
    <value>*</value>
</property>
```

**Note:** After changing `core-site.xml` you must restart Hadoop for your changes to take effect.

## <a id="hive"></a>Hive User Impersonation

Users can access Hive using either the MetaStore or HiveServer2 services. The PXF Hive connector uses the Hive MetaStore, which directly accessing the underlying HDFS files for a Hive table. No specific impersonation configuration is required on the Hive side, as the Hadoop proxy configuration in `core-site.xml` also applies to Hive access.


## <a id="hbase"></a>HBase User Impersonation

HBase does not obtain proxy settings from `core-site.xml`, so you must apply those same settings to the HBase configuration file, and also enable the `hadoop.security.authorization` setting.  The following settings in `hbase-site.xml` permit the `gpadmin` user to impersonate all HDFS groups on all HBase hosts:

``` xml
<property>
    <name>hadoop.proxyuser.gpadmin.hosts</name>
    <value>*</value>
</property>
<property>
    <name>hadoop.proxyuser.gpadmin.groups</name>
    <value>*</value>
</property>
<property>
    <name>hadoop.security.authorization</name>
    <value>true</value>
</property>
```

Restart HBase after making any changes to `hbase-site.xml`
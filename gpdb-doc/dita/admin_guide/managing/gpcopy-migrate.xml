<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_isj_khw_sbs" otherprops="pivotal">
  <title>Migrating Data with gpcopy</title>
  <shortdesc>This topic describes how to use the <codeph>gpcopy</codeph> utility to transfer data
    between databases in different Greenplum Database clusters.</shortdesc>
  <body>
    <p><codeph>gpcopy</codeph> is a high-performance utility that can copy metadata and data from
      one Greenplum database to another Greenplum database. You can migrate the entire contents of a
      database, or just selected tables. The source and destination databases must be in different
      clusters, and the clusters can have different Greenplum Database versions. For example, you
      can use <codeph>gpcopy</codeph> to migrate data from a version 4.x Greenplum Database to
      version 5.x.</p>
    <p>The <codeph>gpcopy</codeph> interface includes options to transfer one or more full
      databases, or one or more database tables. A full database transfer includes the database
      schema, table data, indexes, views, roles, user-defined functions, and resource queues. If a
      copied table or database does not exist in the destination cluster, <codeph>gpcopy</codeph>
      creates it automatically. The utility re-creates indexes on tables as necessary before copying
      data.</p>
    <p>Configuration files, including <codeph>postgres.conf</codeph> and
        <codeph>pg_hba.conf</codeph>, must be transferred manually by an administrator. Extensions
      installed in the database with <codeph>gppkg</codeph>, such as MADlib and programming language
      extensions, must be installed in the destination database by an administrator. </p>
    <p><codeph>gpcopy</codeph> uses many of the same command-line options as the earlier
        <codeph>gptransfer</codeph> utility. <codeph>gpcopy</codeph> provides several improvements
      as compared to <codeph>gptransfer</codeph>:<ul id="ul_ibs_vsp_zdb">
        <li><codeph>gpcopy</codeph> performs significantly faster than <codeph>gptransfer</codeph>
          when copying large amounts of data.</li>
        <li>The <codeph>gpcopy</codeph>
          <codeph>--truncate-source-after</codeph> option provides the ability to migrate from
          Pivotal Greenplum Database 4.x to 5.x on the hardware, requiring minimal free space
          available.</li>
        <li><codeph>gpcopy</codeph> provides more detailed reporting and summary information about
          all aspects of the copy operation.</li>
        <li>
          <p><codeph>gpcopy</codeph> allows the source table data to change while the data is being
            copied. A lock is not acquired on the source table when data is copied. </p>
        </li>
      </ul></p></body>
    <topic id="topic_psq_dsp_zdb">
    <title>Prerequisites</title>
    <body>
      <p>The source and destination Greenplum Database systems must already exist, have network
        access between all hosts, and have master host and primary segment hosts in both systems.
        Each system must be configured with the same number of segments.</p>
    </body>
  </topic>
    <topic id="topic_qwl_2rp_zdb">
      <title>Limitations for the Source and Destination Systems</title>
      <body>
      <p><codeph>gpcopy</codeph> cannot copy data from one database to another in the same Greenplum
        Database system. The destination system must be a separate Greenplum Database cluster.</p>
        <p dir="ltr" id="docs-internal-guid-872b07d9-60bd-1131-d5a6-3fb4dc225771">The
          <codeph>gpcopy</codeph> utility supports copying only between source and destination
        Greenplum Database systems with the same number of segments. If you need to transfer data to
        a Greenplum Database system having a different number of segments, you must use
          <codeph>gptransfer</codeph> instead. See <xref href="gptransfer.xml#topic_gptransfer"
        />.</p>
        <p>If you are copying data between Greenplum Database clusters having different versions,
        each cluster must have <codeph>gpcopy</codeph> installed locally. <codeph>gpcopy</codeph> is
        installed with Pivotal Greenplum Database starting with versions 5.9.0 and 4.3.26.0.</p>
        <p><codeph>gpcopy</codeph> transfers data from user databases only; the
            <codeph>postgres</codeph>, <codeph>template0</codeph>, and <codeph>template1</codeph>
          databases cannot be transferred. Administrators must transfer configuration files manually
          and install extensions into the destination database with <codeph>gppkg</codeph>.</p>
        <p><codeph>gpcopy</codeph> cannot copy a row that is larger than 1GB in size.</p>
        <p>When transferring data between databases, you can run only one instance of
          <codeph>gpcopy</codeph> at a time.  Running multiple, concurrent instances of
          <codeph>gpcopy</codeph> is not supported.</p>
      </body>
    </topic>
  <topic id="topic_ekp_rmp_zdb">
    <title>Performing a Basic Copy Operation</title>
    <body>
      <p>This example <codeph>gpcopy</codeph> command specifies the <codeph>--full</codeph> option
        to perform a migration of a Greenplum Database source system to a destination system. A
        migration copies all database objects including tables, indexes, views, roles, functions,
        user defined types (UDT), and resource queues for all user defined databases. </p>
      <codeblock>gpcopy --source-host mytest --source-port 1234 --source-user gpuser \
    --dest-host demohost --dest-port 1234 --dest-user gpuser \
    --full --drop --validate count</codeblock>
      <p>When performing the copy, the utility drops tables in the destination database
          (<codeph>--drop</codeph> option) and uses the row count of the source and destination
        tables to validate the data transfer (<codeph>--validate count</codeph> option). The other
          <codeph>gpcopy</codeph> options specify the source and destination Greenplum Database
        system master hosts, ports, and the User ID to use to connect to the Greenplum Database
        systems.</p>
      <p>See the <codeph>gpcopy</codeph> utility <ph otherprops="op-print">in the <cite>Greenplum
            Database Utility Guide</cite>
        </ph>for complete syntax and usage information. </p>
    </body>
  </topic>
    <topic id="topic_ay1_frp_zdb">
      <title>Configuring the Batch Size</title>
      <body>
        <p>The degree of parallelism when running <codeph>gpcopy</codeph> is determined the option
          <codeph>--batch-size</codeph>. The option controls the number processes that
          <codeph>gpcopy</codeph> runs in parallel. The default is 4. The range is from 1 to 64. </p>
      <p>The batch size value, <varname>n</varname>, produces
          <codeph>2*<varname>n</varname>+1</codeph> database connections. For example, the default
        batch size value of 4 creates 9 connections.</p>
        <p>If you increase this option, ensure that the Greenplum Database systems are configured
        with a sufficient maximum concurrent connection value to accommodate the
          <codeph>gpcopy</codeph> connections and any other concurrent connections (such as user
        connections) that you require. See the Greenplum Database server configuration parameter
          <codeph>max_connections</codeph>.</p>
      </body>
    </topic>
    <topic id="topic_nd3_2sp_zdb">
    <title>Validating Copied Data</title>
    <body>
      <p>By default, <codeph>gpcopy</codeph> does not validate the data transferred. You can request
        validation using the <codeph>--validate=<i>type</i></codeph> option. The validation
          <i>type</i> can be one of the following:<ul id="ul_hf1_k21_xdb">
          <li><codeph>count</codeph> - compares the row counts between the source and destination
            tables.</li>
          <li><codeph>md5xor</codeph> - calculates the MD5 value of all rows, then performs an XOR
            over the MD5 values.</li>
        </ul></p>
    </body>
  </topic>
    <topic id="topic_ytw_2sp_zdb">
    <title>Addressing Failed Data Transfers</title>
    <body>
      <p>When <codeph>gpcopy</codeph> encounters errors and quits or is cancelled by the user, the
        currently-running copy operations on tables in the destination database are rolled back.
        Copy operations that have completed are not rolled back. </p>
      <p>If a non-fatal error occurs during the process of copying a table, or a table validation
        fails, <codeph>gpcopy</codeph> continues copying the other specified tables. </p>
      <p>After <codeph>gpcopy</codeph> completes, it displays a summary of the copy operations that
        were performed, and lists any tables that encountered errors or failed validation checks. If
        any errors occurred, the summary displays a modified <codeph>gpcopy</codeph> command that
        you can use to retry copying the failed tables. </p>
      <p>After resolving the issues that caused the copy operations to fail, you can run the
        provided command to copy the tables that failed in the previous <codeph>gpcopy</codeph>
        command. </p>
      <p>The <codeph>gpcopy</codeph> utility logs messages in log file
            <codeph>gpcopy_<varname>date</varname>.log</codeph> the <codeph>~/gpAdminLogs</codeph>
        directory on the master host. If you run multiple <codeph>gpcopy</codeph> commands on the
        same day, the utility appends messages to that day's log file. </p>
    </body>
  </topic>
  <topic id="topic_pyc_hpp_zdb">
    <title>Migrating Data Between Clusters that Share Hardware</title>
    <body>
      <p>In order to use a backup/ restore operation or <codeph>gptransfer</codeph> to migrate data
        between two clusters on the same hardware, you would need enough free disk space to
        accommodate over 5 times the original data set (2 full copies of the primary and mirror data
        sets, plus the original backup data in ASCII format). The <codeph>gpcopy</codeph>
        <codeph>--truncate-source-after</codeph> option enables you to migrate data from one cluster
        to another on the same hardware, requiring only a minimum of free disk space. The
          <codeph>--truncate-source-after</codeph> option instructs the utility to truncate the
        source tables after successfully copying their data and validating it in the destination
        cluster. </p>
      <p>If you choose to use <codeph>--truncate-source-after</codeph>, consider the following:<ul
          id="ul_g5k_22q_zdb">
          <li>Back up all source data before using <codeph>gpcopy</codeph> with
              <codeph>--truncate-source-after</codeph>.</li>
          <li>Start both the source and destination clusters in restricted mode (<codeph>gpstart
              -R</codeph>) to ensure that no updates occur while executing
            <codeph>gpcopy</codeph>.</li>
          <li>Use the <codeph>--validate</codeph> option with
              <codeph>--truncate-source-after</codeph> to ensure that data is successfully copied
            before source tables are truncated.</li>
          <li>If you use <codeph>--truncate-source-after</codeph> to migrate data on shared
            hardware, also include the <codeph>--no-compression</codeph> option to avoid the
            overhead cost of compressing and uncompressing data that does not move across the
            network.</li>
          <li>Consider migrating only portions of the your data at a time, so that you can fully
            address table errors or validation failures that may occur during the copy
            operation.</li>
          <li>In general, keep in mind that using the <codeph>--truncate-source-after</codeph>
            option does not allow for an easy rollback to the source system to its original
            condition if errors occur or validation checks fail during the <codeph>gpcopy</codeph>
            operation. Table errors or validation failures during the <codeph>gpcopy</codeph>
            operation can leave some tables remaining in the source cluster, while other tables may
            be empty (having been truncated after being copied to the new cluster).</li>
        </ul></p>
      <p>For example:</p>
      <codeblock>gpcopy --source-host my_host --source-port 1234 --source-user gpuser \
--dest-host my_host --dest-port 1235 --dest-user gpuser --database database1 \
-truncate --analyze --validate count --no-compression</codeblock>
    </body>
  </topic>
</topic>
